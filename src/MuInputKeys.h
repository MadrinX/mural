/*
Copyright (c) 2015 Sean Bohan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

#pragma once

#include "GLFW/glfw3.h"
#include "MuGlobals.h"

#include <map>
#include <set>

namespace mural {

    /**
     * Keys values.
     */
    static const int
    /* Digits */
    KEY_Digit0      = GLFW_KEY_0,
    KEY_Digit1      = GLFW_KEY_1,
    KEY_Digit2      = GLFW_KEY_2,
    KEY_Digit3      = GLFW_KEY_3,
    KEY_Digit4      = GLFW_KEY_4,
    KEY_Digit5      = GLFW_KEY_5,
    KEY_Digit6      = GLFW_KEY_6,
    KEY_Digit7      = GLFW_KEY_7,
    KEY_Digit8      = GLFW_KEY_8,
    KEY_Digit9      = GLFW_KEY_9,

    /* Letters */
    KEY_A           = GLFW_KEY_A,
    KEY_B           = GLFW_KEY_B,
    KEY_C           = GLFW_KEY_C,
    KEY_D           = GLFW_KEY_D,
    KEY_E           = GLFW_KEY_E,
    KEY_F           = GLFW_KEY_F,
    KEY_G           = GLFW_KEY_G,
    KEY_H           = GLFW_KEY_H,
    KEY_I           = GLFW_KEY_I,
    KEY_J           = GLFW_KEY_J,
    KEY_K           = GLFW_KEY_K,
    KEY_L           = GLFW_KEY_L,
    KEY_M           = GLFW_KEY_M,
    KEY_N           = GLFW_KEY_N,
    KEY_O           = GLFW_KEY_O,
    KEY_P           = GLFW_KEY_P,
    KEY_Q           = GLFW_KEY_Q,
    KEY_R           = GLFW_KEY_R,
    KEY_S           = GLFW_KEY_S,
    KEY_T           = GLFW_KEY_T,
    KEY_U           = GLFW_KEY_U,
    KEY_V           = GLFW_KEY_V,
    KEY_W           = GLFW_KEY_W,
    KEY_X           = GLFW_KEY_X,
    KEY_Y           = GLFW_KEY_Y,
    KEY_Z           = GLFW_KEY_Z,

    /* Other printable keys */
    KEY_Comma       = GLFW_KEY_COMMA,
    KEY_Period      = GLFW_KEY_PERIOD,
    KEY_Semicolon   = GLFW_KEY_SEMICOLON,
    KEY_Quote       = GLFW_KEY_APOSTROPHE,
    KEY_BracketLeft = GLFW_KEY_LEFT_BRACKET,
    KEY_BracketRight = GLFW_KEY_RIGHT_BRACKET,
    KEY_Backquote   = GLFW_KEY_GRAVE_ACCENT,
    KEY_Backslash   = GLFW_KEY_BACKSLASH,
    KEY_Minuse      = GLFW_KEY_MINUS,
    KEY_Equal       = GLFW_KEY_EQUAL,

    /* Modifier keys */
    KEY_AltLeft     = GLFW_KEY_LEFT_ALT,
    KEY_AltRight    = GLFW_KEY_RIGHT_ALT,
    KEY_CapSLock    = GLFW_KEY_CAPS_LOCK,
    KEY_ControlLeft = GLFW_KEY_LEFT_CONTROL,
    KEY_ControlRight = GLFW_KEY_RIGHT_CONTROL,
    KEY_OSLeft      = GLFW_KEY_LEFT_SUPER,
    KEY_OSRight     = GLFW_KEY_RIGHT_SUPER,
    KEY_ShiftLeft   = GLFW_KEY_LEFT_SHIFT,
    KEY_ShiftRight  = GLFW_KEY_RIGHT_SHIFT,

    /* Other non-printable keys */
    KEY_Enter       = GLFW_KEY_ENTER,
    KEY_Space       = GLFW_KEY_SPACE,
    KEY_Tab         = GLFW_KEY_TAB,
    KEY_Delete      = GLFW_KEY_DELETE,
    KEY_End         = GLFW_KEY_END,
    KEY_Home        = GLFW_KEY_HOME,
    KEY_Insert      = GLFW_KEY_INSERT,
    KEY_PageDown    = GLFW_KEY_PAGE_DOWN,
    KEY_PageUp      = GLFW_KEY_PAGE_UP,
    KEY_ArrowDown   = GLFW_KEY_DOWN,
    KEY_ArrowLeft   = GLFW_KEY_LEFT,
    KEY_ArrowRight  = GLFW_KEY_RIGHT,
    KEY_ArrowUp     = GLFW_KEY_UP,
    KEY_Escape      = GLFW_KEY_ESCAPE,
    KEY_PrintScreen = GLFW_KEY_PRINT_SCREEN,
    KEY_ScrollLock  = GLFW_KEY_SCROLL_LOCK,
    KEY_Pause       = GLFW_KEY_PAUSE,

    /* Function keys */
    KEY_F1          = GLFW_KEY_F1,
    KEY_F2          = GLFW_KEY_F2,
    KEY_F3          = GLFW_KEY_F3,
    KEY_F4          = GLFW_KEY_F4,
    KEY_F5          = GLFW_KEY_F5,
    KEY_F6          = GLFW_KEY_F6,
    KEY_F7          = GLFW_KEY_F7,
    KEY_F8          = GLFW_KEY_F8,
    KEY_F9          = GLFW_KEY_F9,
    KEY_F10         = GLFW_KEY_F10,
    KEY_F11         = GLFW_KEY_F11,
    KEY_F12         = GLFW_KEY_F12,
    KEY_F13         = GLFW_KEY_F13,
    KEY_F14         = GLFW_KEY_F14,
    KEY_F15         = GLFW_KEY_F15,
    KEY_F16         = GLFW_KEY_F16,
    KEY_F17         = GLFW_KEY_F17,
    KEY_F18         = GLFW_KEY_F18,
    KEY_F19         = GLFW_KEY_F19,
    KEY_F20         = GLFW_KEY_F20,
    KEY_F21         = GLFW_KEY_F21,
    KEY_F22         = GLFW_KEY_F22,
    KEY_F23         = GLFW_KEY_F23,
    KEY_F24         = GLFW_KEY_F24,

    /* NumPad keys */
    KEY_NumLock     = GLFW_KEY_NUM_LOCK,
    KEY_Numpad0     = GLFW_KEY_KP_0,
    KEY_Numpad1     = GLFW_KEY_KP_1,
    KEY_Numpad2     = GLFW_KEY_KP_2,
    KEY_Numpad3     = GLFW_KEY_KP_3,
    KEY_Numpad4     = GLFW_KEY_KP_4,
    KEY_Numpad5     = GLFW_KEY_KP_5,
    KEY_Numpad6     = GLFW_KEY_KP_6,
    KEY_Numpad7     = GLFW_KEY_KP_7,
    KEY_Numpad8     = GLFW_KEY_KP_8,
    KEY_Numpad9     = GLFW_KEY_KP_9,
    KEY_NumpadAdd   = GLFW_KEY_KP_ADD,
    KEY_NumpadDecimal = GLFW_KEY_KP_DECIMAL,
    KEY_NumpadDivide = GLFW_KEY_KP_DIVIDE,
    KEY_NumpadEnter = GLFW_KEY_KP_ENTER,
    KEY_NumpadEqual = GLFW_KEY_KP_EQUAL,
    KEY_NumpadMultiply = GLFW_KEY_KP_MULTIPLY,
    KEY_NumpadSubtract = GLFW_KEY_KP_SUBTRACT;

    static const std::map<int, int> KeyboardKeyCodeMap = {
        /* Digits */
        { KEY_Digit0, 0x30 },
        { KEY_Digit1, 0x31 },
        { KEY_Digit2, 0x32 },
        { KEY_Digit3, 0x33 },
        { KEY_Digit4, 0x34 },
        { KEY_Digit5, 0x35 },
        { KEY_Digit6, 0x36 },
        { KEY_Digit7, 0x37 },
        { KEY_Digit8, 0x38 },
        { KEY_Digit9, 0x39 },

        /* Letters */
        { KEY_A, 0x41 },
        { KEY_B, 0x42 },
        { KEY_C, 0x43 },
        { KEY_D, 0x44 },
        { KEY_E, 0x45 },
        { KEY_F, 0x46 },
        { KEY_G, 0x47 },
        { KEY_H, 0x48 },
        { KEY_I, 0x49 },
        { KEY_J, 0x4A },
        { KEY_K, 0x4B },
        { KEY_L, 0x4C },
        { KEY_M, 0x4D },
        { KEY_N, 0x4E },
        { KEY_O, 0x4F },
        { KEY_P, 0x50 },
        { KEY_Q, 0x51 },
        { KEY_R, 0x52 },
        { KEY_S, 0x53 },
        { KEY_T, 0x54 },
        { KEY_U, 0x55 },
        { KEY_V, 0x56 },
        { KEY_W, 0x57 },
        { KEY_X, 0x58 },
        { KEY_Y, 0x59 },
        { KEY_Z, 0x5A },

        /* Other printable keys */
        { KEY_Comma, 0xBC },
        { KEY_Period, 0xBE },
        { KEY_Semicolon, 0xBA },
        { KEY_Quote, 0xDE },
        { KEY_BracketLeft, 0xDB },
        { KEY_BracketRight, 0xDD },
        { KEY_Backquote, 0xC0 },
        { KEY_Backslash, 0xDC },
        { KEY_Minuse, 0xBD },
        { KEY_Equal, 0xBB },

        /* Modifier keys */
        { KEY_AltLeft, 0x12 },
        { KEY_AltRight, 0x12 },
        { KEY_CapSLock, 0x14 },
        { KEY_ControlLeft, 0x11 },
        { KEY_ControlRight, 0x11 },
        { KEY_OSLeft, 0x5B },
        { KEY_OSRight, 0x5C },
        { KEY_ShiftLeft, 0x12 },
        { KEY_ShiftRight, 0x12 },

        /* Other non-printable keys */
        { KEY_Enter, 0x0D },
        { KEY_Space, 0x20 },
        { KEY_Tab, 0x09 },
        { KEY_Delete, 0x2E },
        { KEY_End, 0x23 },
        { KEY_Home, 0x24 },
        { KEY_Insert, 0x2D },
        { KEY_PageDown, 0x22 },
        { KEY_PageUp, 0x21 },
        { KEY_ArrowDown, 0x28 },
        { KEY_ArrowLeft, 0x25 },
        { KEY_ArrowRight, 0x27 },
        { KEY_ArrowUp, 0x26 },
        { KEY_Escape, 0x1B },
        { KEY_PrintScreen, 0x2C },
        { KEY_ScrollLock, 0x91 },
        { KEY_Pause, 0x13 },

        /* Function keys */
        { KEY_F1, 0x70 },
        { KEY_F2, 0x71 },
        { KEY_F3, 0x72 },
        { KEY_F4, 0x73 },
        { KEY_F5, 0x74 },
        { KEY_F6, 0x75 },
        { KEY_F7, 0x76 },
        { KEY_F8, 0x77 },
        { KEY_F9, 0x78 },
        { KEY_F10, 0x79 },
        { KEY_F11, 0x7A },
        { KEY_F12, 0x7B },
        { KEY_F13, 0x7C },
        { KEY_F14, 0x7D },
        { KEY_F15, 0x7E },
        { KEY_F16, 0x7F },
        { KEY_F17, 0x80 },
        { KEY_F18, 0x81 },
        { KEY_F19, 0x82 },
        { KEY_F20, 0x83 },
        { KEY_F21, 0x84 },
        { KEY_F22, 0x85 },
        { KEY_F23, 0x86 },
        { KEY_F24, 0x87 },

        /* NumPad keys */
        { KEY_NumLock, 0x90 },
        { KEY_Numpad0, 0x60 },
        { KEY_Numpad1, 0x61 },
        { KEY_Numpad2, 0x62 },
        { KEY_Numpad3, 0x63 },
        { KEY_Numpad4, 0x64 },
        { KEY_Numpad5, 0x65 },
        { KEY_Numpad6, 0x66 },
        { KEY_Numpad7, 0x67 },
        { KEY_Numpad8, 0x68 },
        { KEY_Numpad9, 0x69 },
        { KEY_NumpadAdd, 0x6B },
        { KEY_NumpadDecimal, 0x6E },
        { KEY_NumpadDivide, 0x6F },
        { KEY_NumpadEnter, 0x0D },
        { KEY_NumpadEqual, 0x0C },
        { KEY_NumpadMultiply, 0x6A },
        { KEY_NumpadSubtract, 0x6D }
    };

    static const std::map<int, const String> KeyboardCodeMap = {
        /* Digits */
        { KEY_Digit0, "Digit0" },
        { KEY_Digit1, "Digit1" },
        { KEY_Digit2, "Digit2" },
        { KEY_Digit3, "Digit3" },
        { KEY_Digit4, "Digit4" },
        { KEY_Digit5, "Digit5" },
        { KEY_Digit6, "Digit6" },
        { KEY_Digit7, "Digit7" },
        { KEY_Digit8, "Digit8" },
        { KEY_Digit9, "Digit9" },

        /* Letters */
        { KEY_A, "KeyA" },
        { KEY_B, "KeyB" },
        { KEY_C, "KeyC" },
        { KEY_D, "KeyD" },
        { KEY_E, "KeyE" },
        { KEY_F, "KeyF" },
        { KEY_G, "KeyG" },
        { KEY_H, "KeyH" },
        { KEY_I, "KeyI" },
        { KEY_J, "KeyJ" },
        { KEY_K, "KeyK" },
        { KEY_L, "KeyL" },
        { KEY_M, "KeyM" },
        { KEY_N, "KeyN" },
        { KEY_O, "KeyO" },
        { KEY_P, "KeyP" },
        { KEY_Q, "KeyQ" },
        { KEY_R, "KeyR" },
        { KEY_S, "KeyS" },
        { KEY_T, "KeyT" },
        { KEY_U, "KeyU" },
        { KEY_V, "KeyV" },
        { KEY_W, "KeyW" },
        { KEY_X, "KeyX" },
        { KEY_Y, "KeyY" },
        { KEY_Z, "KeyZ" },

        /* Other printable keys */
        { KEY_Comma, "Comma" },
        { KEY_Period, "Period" },
        { KEY_Semicolon, "Semicolon" },
        { KEY_Quote, "Quote" },
        { KEY_BracketLeft, "BracketLeft" },
        { KEY_BracketRight, "BracketRight" },
        { KEY_Backquote, "Backquote" },
        { KEY_Backslash, "Backslash" },
        { KEY_Minuse, "Minuse" },
        { KEY_Equal, "Equal" },

        /* Modifier keys */
        { KEY_AltLeft, "AltLeft" },
        { KEY_AltRight, "AltRight" },
        { KEY_CapSLock, "CapSLock" },
        { KEY_ControlLeft, "ControlLeft" },
        { KEY_ControlRight, "ControlRight" },
        { KEY_OSLeft, "OSLeft" },
        { KEY_OSRight, "OSRight" },
        { KEY_ShiftLeft, "ShiftLeft" },
        { KEY_ShiftRight, "ShiftRight" },

        /* Other non-printable keys */
        { KEY_Enter, "Enter" },
        { KEY_Space, "Space" },
        { KEY_Tab, "Tab" },
        { KEY_Delete, "Delete" },
        { KEY_End, "End" },
        { KEY_Home, "Home" },
        { KEY_Insert, "Insert" },
        { KEY_PageDown, "PageDown" },
        { KEY_PageUp, "PageUp" },
        { KEY_ArrowDown, "ArrowDown" },
        { KEY_ArrowLeft, "ArrowLeft" },
        { KEY_ArrowRight, "ArrowRight" },
        { KEY_ArrowUp, "ArrowUp" },
        { KEY_Escape, "Escape" },
        { KEY_PrintScreen, "PrintScreen" },
        { KEY_ScrollLock, "ScrollLock" },
        { KEY_Pause, "Pause" },

        /* Function keys */
        { KEY_F1, "F1" },
        { KEY_F2, "F2" },
        { KEY_F3, "F3" },
        { KEY_F4, "F4" },
        { KEY_F5, "F5" },
        { KEY_F6, "F6" },
        { KEY_F7, "F7" },
        { KEY_F8, "F8" },
        { KEY_F9, "F9" },
        { KEY_F10,"F1" },
        { KEY_F11,"F1" },
        { KEY_F12,"F1" },
        { KEY_F13,"F1" },
        { KEY_F14,"F1" },
        { KEY_F15,"F1" },
        { KEY_F16,"F1" },
        { KEY_F17,"F1" },
        { KEY_F18,"F1" },
        { KEY_F19,"F1" },
        { KEY_F20,"F2" },
        { KEY_F21,"F2" },
        { KEY_F22,"F2" },
        { KEY_F23,"F2" },
        { KEY_F24,"F2" },

        /* NumPad keys */
        { KEY_NumLock, "NumLock" },
        { KEY_Numpad0, "Numpad0" },
        { KEY_Numpad1, "Numpad1" },
        { KEY_Numpad2, "Numpad2" },
        { KEY_Numpad3, "Numpad3" },
        { KEY_Numpad4, "Numpad4" },
        { KEY_Numpad5, "Numpad5" },
        { KEY_Numpad6, "Numpad6" },
        { KEY_Numpad7, "Numpad7" },
        { KEY_Numpad8, "Numpad8" },
        { KEY_Numpad9, "Numpad9" },
        { KEY_NumpadAdd, "NumpadAdd" },
        { KEY_NumpadDecimal, "NumpadDecimal" },
        { KEY_NumpadDivide, "NumpadDivide" },
        { KEY_NumpadEnter, "NumpadEnter" },
        { KEY_NumpadEqual, "NumpadEqual" },
        { KEY_NumpadMultiply, "NumpadMultiply" },
        { KEY_NumpadSubtract, "NumpadSubtract" }
    };

    static const std::set<int> PrintableKeys = {
        KEY_Digit0,
        KEY_Digit1,
        KEY_Digit2,
        KEY_Digit3,
        KEY_Digit4,
        KEY_Digit5,
        KEY_Digit6,
        KEY_Digit7,
        KEY_Digit8,
        KEY_Digit9,
        KEY_A,
        KEY_B,
        KEY_C,
        KEY_D,
        KEY_E,
        KEY_F,
        KEY_G,
        KEY_H,
        KEY_I,
        KEY_J,
        KEY_K,
        KEY_L,
        KEY_M,
        KEY_N,
        KEY_O,
        KEY_P,
        KEY_Q,
        KEY_R,
        KEY_S,
        KEY_T,
        KEY_U,
        KEY_V,
        KEY_W,
        KEY_X,
        KEY_Y,
        KEY_Z,
        KEY_Comma,
        KEY_Period,
        KEY_Semicolon,
        KEY_Quote,
        KEY_BracketLeft,
        KEY_BracketRight,
        KEY_Backquote,
        KEY_Backslash,
        KEY_Minuse,
        KEY_Equal,
        KEY_NumLock,
        KEY_Numpad0,
        KEY_Numpad1,
        KEY_Numpad2,
        KEY_Numpad3,
        KEY_Numpad4,
        KEY_Numpad5,
        KEY_Numpad6,
        KEY_Numpad7,
        KEY_Numpad8,
        KEY_Numpad9,
        KEY_NumpadAdd,
        KEY_NumpadDecimal,
        KEY_NumpadDivide,
        KEY_NumpadEnter,
        KEY_NumpadEqual,
        KEY_NumpadMultiply,
        KEY_NumpadSubtract
    };

};
